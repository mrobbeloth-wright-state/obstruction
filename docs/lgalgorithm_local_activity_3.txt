@startuml

start

:Create visualization engine object\n(presently plplot stream);
:Configure visualization engine;
:Initialize visualization engine;
#00FF7F:Convert OpenCV Point objects\ninto format suitable to\nvisualization engine;
:Determine limits to set in plot graph\nbased on conversion;
:Plot data with circle glyph graph points\ninto external file;
:Close visualization engine;
:Calc and display timing data\nfor local segment;

if (debug flag) then (yes)
   :Display shape expression of\nsegment being processed;
else (no)
   :skip;
endif
:Apply auto crop grayscale operator;

if (segment had shape expression\ndata) then (yes)
   :Start timing call to line connectivity\nalgorithm;
   :Determine line connectivity\n(releationships) of lines in segment\nto one another;
   :End timing call to line connectivity\nalgorithm;
   :Calculate time in line connectivity\nalgorithm;
   :Display time in line connectivity\nalgorithm;
else (no)
   :Add dummy line segment metadata object\nto list of line segment metadata objects;
endif

#00FF7F: Generate raw centroid for segment;
:Display location of centroid for segment;
:Add centroid to array of local nodes;

:Build local node description;
if (NGB Partitioning) then
   :Collect partitioning stats\nfor rows, cols, and intensity;
else (OpenCV Partitioning)
   :Collect partitioning stats\nfrom OpenCV kmeans;
   :Convert string formatted stats\n into numerical data;
endif

:Create local node object;
:Initialize local node object with\nsegment stats, border,\nline reletionship data,\nraw segment data\n, partiioning alg, and seg. number;

if (model image) then *yes)
   :Insert segment data into database;
else (no)
   :Insert segment data into\nmemory resident datastructures;
endif

if (debug_flag) then (yes)
   :Display local node object;
else (no)
   :skip;
endif

@enduml
